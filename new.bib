@article{Port07,
  title={Actionable Analytics for Strategic Maintenance of Critical Software: An Industry Experience Report},
  author={Port, Dan and Taber, Bill},
  journal={IEEE Software},
  volume={35},
  number={1},
  pages={58--63},
  year={2017},
  publisher={IEEE}
}
@article{Hall12,
  title={A systematic literature review on fault prediction performance in software engineering},
  author={Hall, Tracy and Beecham, Sarah and Bowes, David and Gray, David and Counsell, Steve},
  journal={IEEE Transactions on Software Engineering},
  volume={38},
  number={6},
  pages={1276--1304},
  year={2011},
  publisher={IEEE}
}

@article{Catal09,
 author = {Catal, Cagatay and Diri, Banu},
 title = {A Systematic Review of Software Fault Prediction Studies},
 journal = {Expert Syst. Appl.},
 issue_date = {May, 2009},
 volume = {36},
 number = {4},
 month = may,
 year = {2009},
 issn = {0957-4174},
 pages = {7346--7354},
 numpages = {9},
 url = {http://dx.doi.org/10.1016/j.eswa.2008.10.027},
 doi = {10.1016/j.eswa.2008.10.027},
 acmid = {1508620},
 publisher = {Pergamon Press, Inc.},
 address = {Tarrytown, NY, USA},
 keywords = {Automated fault prediction models, Expert systems, Machine learning, Method-level metrics, Public datasets},
}
@article{Hoss17,
author = {Hosseini, Rebvar and Turhan, Burak and Gunarathna, Dimuthu},
year = {2017},
month = {11},
pages = {1-1},
title = {A Systematic Literature Review and Meta-Analysis on Cross Project Defect Prediction},
volume = {PP},
journal = {IEEE Transactions on Software Engineering},
doi = {10.1109/TSE.2017.2770124}
}
@misc{Herb19,
    title={On the costs and profit of software defect prediction},
    author={Steffen Herbold},
    year={2019},
    eprint={1911.04309},
    archivePrefix={arXiv},
    primaryClass={cs.SE}
}
@incollection{MOLU17,
title = "Chapter 12 - Analysis of Time Series",
editor = "Kumar Molugaram and G. Shanker Rao",
booktitle = "Statistical Techniques for Transportation Engineering",
publisher = "Butterworth-Heinemann",
pages = "463 - 489",
year = "2017",
isbn = "978-0-12-811555-8",
doi = "https://doi.org/10.1016/B978-0-12-811555-8.00012-X",
url = "http://www.sciencedirect.com/science/article/pii/B978012811555800012X",
author = "Kumar Molugaram and G. Shanker Rao",
keywords = "Components of time series, free-hand method, moving average method, semiaverage method, least square method",
abstract = "Time series is a series of numerical data, which have been recorded at different intervals of time. It is a record of changes recorded in variables over a period of time, the study of which throws light on the economic behavior of a certain variable. It has an important and significant place in business and economics. In this chapter we discuss the components of time series and calculation of trend values by different methods."
}
@article{Sovb18a,
  author = {Sovbetov, Yhlas},
  year = {2018},
  month = {feb},
  pages = {1-27},
  title = {Factors Influencing Cryptocurrency Prices: Evidence from Bitcoin, Ethereum, Dash, Litcoin, and Monero},
  volume = {2},
  Issue = {2},
  journal = {Journal of Economics and Financial Analysis}
}
@inproceedings{port18,
  title={An empirical study of process policies and metrics to manage productivity and quality for maintenance of critical software systems at the jet propulsion laboratory},
  author={Port, Dan and Taber, Bill},
  booktitle={Proceedings of the 12th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement},
  pages={37},
  year={2018},
  organization={ACM}
}
@article{gill91,
  title={Cyclomatic complexity density and software maintenance productivity},
  author={Gill, Geoffrey K and Kemerer, Chris F},
  journal={IEEE transactions on software engineering},
  volume={17},
  number={12},
  pages={1284},
  year={1991},
  publisher={IEEE Computer Society}
}
@inproceedings{Li03,
  title={Selecting a Defect Prediction Model for Maintenance Resource Planning and Software Insurance},
  author={Paul Luo Li and Mary Shaw and James D. Herbsleb},
  year={2003}
}
@article{Li19a,
  title={A systematic review of unsupervised learning techniques for software defect prediction},
  author={Li, Ning and Shepperd, Martin and Guo, Yuchen},
  journal={arXiv preprint arXiv:1907.12027},
  year={2019}
}
@book{fent14,
  title={Software metrics: a rigorous and practical approach},
  author={Fenton, Norman and Bieman, James},
  year={2014},
  publisher={CRC press}
}

@article{malh15,
	title = {A systematic review of machine learning techniques for software fault prediction},
	volume = {27},
	issn = {1568-4946},
	url = {http://www.sciencedirect.com/science/article/pii/S1568494614005857},
	doi = {https://doi.org/10.1016/j.asoc.2014.11.023},
	abstract = {Background Software fault prediction is the process of developing models that can be used by the software practitioners in the early phases of software development life cycle for detecting faulty constructs such as modules or classes. There are various machine learning techniques used in the past for predicting faults. Method In this study we perform a systematic review of studies from January 1991 to October 2013 in the literature that use the machine learning techniques for software fault prediction. We assess the performance capability of the machine learning techniques in existing research for software fault prediction. We also compare the performance of the machine learning techniques with the statistical techniques and other machine learning techniques. Further the strengths and weaknesses of machine learning techniques are summarized. Results In this paper we have identified 64 primary studies and seven categories of the machine learning techniques. The results prove the prediction capability of the machine learning techniques for classifying module/class as fault prone or not fault prone. The models using the machine learning techniques for estimating software fault proneness outperform the traditional statistical models. Conclusion Based on the results obtained from the systematic review, we conclude that the machine learning techniques have the ability for predicting software fault proneness and can be used by software practitioners and researchers. However, the application of the machine learning techniques in software fault prediction is still limited and more number of studies should be carried out in order to obtain well formed and generalizable results. We provide future guidelines to practitioners and researchers based on the results obtained in this work.},
	journal = {Applied Soft Computing},
	author = {Malhotra, Ruchika},
	year = {2015},
	keywords = {Machine learning, Software fault proneness, Systematic literature review},
	pages = {504 -- 518}
}
@inproceedings{Lenar17,
  title={A dynamical quality model to continuously monitor software maintenance},
  author={Lenarduzzi, Valentina and Stan, Alexandru Cristian and Taibi, Davide and Tosi, Davide and Venters, Gustavs},
  booktitle={The European Conference on Information Systems Management},
  pages={168--178},
  year={2017},
  organization={Academic Conferences International Limited}
}
@inproceedings{bibi06,
  title={Software Defect Prediction Using Regression via Classification.},
  author={Bibi, Stamatia and Tsoumakas, Grigorios and Stamelos, Ioannis and Vlahavas, Ioannis P},
  booktitle={AICCSA},
  pages={330--336},
  year={2006}
}
@INPROCEEDINGS{Tanti16,
author={C. {Tantithamthavorn} and S. {McIntosh} and A. E. {Hassan} and K. {Matsumoto}},
booktitle={2016 IEEE/ACM 38th International Conference on Software Engineering (ICSE)},
title={Automated Parameter Optimization of Classification Techniques for Defect Prediction Models},
year={2016},
volume={},
number={},
pages={321-332},
keywords={pattern classification;public domain software;software fault tolerance;software quality;parameter optimization;classification techniques;defect prediction models;configurable parameters;Caret technique;proprietary domain;open source domain;Caret-optimized classifiers;Predictive models;Vegetation;Optimization;Boosting;Decision trees;Kernel;software defect prediction;experimental design;classification techniques;parameter optimization},
doi={10.1145/2884781.2884857},
ISSN={1558-1225},
month={May},}
@article{Zhan10a,
author = {Zhang, Hongyu and Kim, Sunghun},
year = {2010},
month = {07},
pages = {58-64},
title = {Monitoring Software Quality Evolution for Defects},
volume = {27},
journal = {IEEE Software},
doi = {10.1109/MS.2010.66}
}
@misc{Levin19a,
    title={Towards Software Analytics: Modeling Maintenance Activities},
    author={Stanislav Levin and Amiram Yehudai},
    year={2019},
    eprint={1903.04909},
    archivePrefix={arXiv},
    primaryClass={cs.SE}
}
@inproceedings{Herz13a,
 author = {Herzig, Kim and Just, Sascha and Zeller, Andreas},
 title = {It\&\#039;s Not a Bug, It\&\#039;s a Feature: How Misclassification Impacts Bug Prediction},
 booktitle = {Proceedings of the 2013 International Conference on Software Engineering},
 series = {ICSE '13},
 year = {2013},
 isbn = {978-1-4673-3076-3},
 location = {San Francisco, CA, USA},
 pages = {392--401},
 numpages = {10},
 url = {http://dl.acm.org/citation.cfm?id=2486788.2486840},
 acmid = {2486840},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
} 

@inproceedings{Mock20a,
	address = {Victoria, BC, Canada},
	title = {Identifying reasons for software changes using historic databases},
	isbn = {978-0-8186-6330-7},
	url = {http://ieeexplore.ieee.org/document/883028/},
	doi = {10.1109/ICSM.2000.883028},
	abstract = {Large scale software products must constantly change in order to adapt to a changing environment. Studies of historic data from legacy software systems have identified three specific causes of this change: adding new features; correctingfaults; and restructuring code to accommodate future changes.},
	language = {en},
	urldate = {2019-11-26},
	booktitle = {Proceedings {International} {Conference} on {Software} {Maintenance} {ICSM}-94},
	publisher = {IEEE Comput. Soc. Press},
	author = {{Mockus} and {Votta}},
	year = {2000},
	pages = {120--130},
	file = {Mockus and Votta - 2000 - Identifying reasons for software changes using his.pdf:/Users/honore/Zotero/storage/7MEXXHTR/Mockus and Votta - 2000 - Identifying reasons for software changes using his.pdf:application/pdf}
}
@book{Pigo96a,
 author = {Pigoski, Thomas M.},
 title = {Practical Software Maintenance: Best Practices for Managing Your Software Investment},
 year = {1996},
 isbn = {0471170011, 9780471170013},
 edition = {1st},
 publisher = {Wiley Publishing},
} 
